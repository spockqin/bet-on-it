{
  "_args": [
    [
      {
        "raw": "@gnosis.pm/gnosis-core-contracts@^0.3.5",
        "scope": "@gnosis.pm",
        "escapedName": "@gnosis.pm%2fgnosis-core-contracts",
        "name": "@gnosis.pm/gnosis-core-contracts",
        "rawSpec": "^0.3.5",
        "spec": ">=0.3.5 <0.4.0",
        "type": "range"
      },
      "/Users/ashley.nguyen27/gnosis-tasks/node_modules/@gnosis.pm/gnosisjs"
    ]
  ],
  "_from": "@gnosis.pm/gnosis-core-contracts@>=0.3.5 <0.4.0",
  "_id": "@gnosis.pm/gnosis-core-contracts@0.3.5",
  "_inCache": true,
  "_location": "/@gnosis.pm/gnosis-core-contracts",
  "_nodeVersion": "8.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/gnosis-core-contracts-0.3.5.tgz_1507362393653_0.5788104648236185"
  },
  "_npmUser": {
    "name": "alanlu1023",
    "email": "alanlu1023@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@gnosis.pm/gnosis-core-contracts@^0.3.5",
    "scope": "@gnosis.pm",
    "escapedName": "@gnosis.pm%2fgnosis-core-contracts",
    "name": "@gnosis.pm/gnosis-core-contracts",
    "rawSpec": "^0.3.5",
    "spec": ">=0.3.5 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@gnosis.pm/gnosisjs"
  ],
  "_resolved": "https://registry.npmjs.org/@gnosis.pm/gnosis-core-contracts/-/gnosis-core-contracts-0.3.5.tgz",
  "_shasum": "478b127d5e26991bbac5507d5f31eed92557dbd5",
  "_shrinkwrap": null,
  "_spec": "@gnosis.pm/gnosis-core-contracts@^0.3.5",
  "_where": "/Users/ashley.nguyen27/gnosis-tasks/node_modules/@gnosis.pm/gnosisjs",
  "author": {
    "name": "Gnosis",
    "url": "https://gnosis.pm"
  },
  "bugs": {
    "url": "https://github.com/gnosis/gnosis-contracts/issues"
  },
  "dependencies": {},
  "description": "Collection of smart contracts for the Gnosis prediction market platform",
  "devDependencies": {
    "@digix/tempo": "^0.2.0",
    "babel-eslint": "^8.0.0",
    "decimal.js": "^7.2.4",
    "eslint": "^4.6.1",
    "eslint-plugin-babel": "^4.1.1",
    "lodash": "^4.17.4",
    "npm-prepublish": "^1.2.3",
    "run-with-testrpc": "^0.2.1",
    "solidity-coverage": "^0.2.3",
    "truffle": "^3.4.9"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-mO23+BttjKgvNJnYzhaSu3EjAEqriQTOxiS1Dq/+sM3CUQcqpeWIi5m2ipgALNXPwMTRhLBlovAtUAQtPbEXtw==",
    "shasum": "478b127d5e26991bbac5507d5f31eed92557dbd5",
    "tarball": "https://registry.npmjs.org/@gnosis.pm/gnosis-core-contracts/-/gnosis-core-contracts-0.3.5.tgz"
  },
  "gitHead": "9285b3e12708b921eecba827161b9295894b406f",
  "homepage": "https://github.com/gnosis/gnosis-contracts#readme",
  "keywords": [
    "Ethereum",
    "Gnosis",
    "Prediction-Market",
    "Solidity",
    "Truffle"
  ],
  "license": "GPL-3.0",
  "maintainers": [
    {
      "name": "alanlu1023",
      "email": "alanlu1023@gmail.com"
    },
    {
      "name": "stefan.george",
      "email": "stefan.david.george@gmail.com"
    },
    {
      "name": "roland97",
      "email": "roland@97.network"
    }
  ],
  "name": "@gnosis.pm/gnosis-core-contracts",
  "optionalDependencies": {},
  "readme": "Gnosis Smart Contracts\n======================\n\n[![Logo](https://raw.githubusercontent.com/gnosis/gnosis-contracts/master/assets/logo.png)](https://gnosis.pm/)\n\n[![Build Status](https://travis-ci.org/gnosis/gnosis-contracts.svg?branch=master)](https://travis-ci.org/gnosis/gnosis-contracts)\n\n[![Codecov badge](https://codecov.io/gh/gnosis/gnosis-contracts/branch/master/graph/badge.svg)](https://codecov.io/gh/gnosis/gnosis-contracts/)\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/gnosis/gnosis-contracts.svg)](https://greenkeeper.io/)\n\n[![Slack Status](https://slack.gnosis.pm/badge.svg)](https://slack.gnosis.pm)\n\nCollection of smart contracts for the Gnosis prediction market platform (https://www.gnosis.pm).\nTo interact with those contracts have a look at (https://github.com/gnosis/gnosis.js/).\n\nInstall\n-------\n### Install requirements with npm:\n\n```bash\nnpm install\n```\n\nTesting and Linting\n-------------------\n### Run all tests (requires Node version >=7 for `async/await`, and will automatically run TestRPC in the background):\n\n```bash\nnpm test\n```\n\n### Run all tests matching a regexp pattern by setting the `TEST_GREP` environment variable\n\n```bash\nTEST_GREP='short selling' npm test\n```\n\n### Lint the JS\n\n```bash\nnpm run lint\n```\n\nCompile and Deploy\n------------------\nThese commands apply to the RPC provider running on port 8545. You may want to have TestRPC running in the background. They are really wrappers around the [corresponding Truffle commands](http://truffleframework.com/docs/advanced/commands).\n\n### Compile all contracts to obtain ABI and bytecode:\n\n```bash\nnpm run compile\n```\n\n### Migrate all contracts required for the basic framework onto network associated with RPC provider:\n\n```bash\nnpm run migrate\n```\n\nNetwork Artifacts\n-----------------\n\n### Show the deployed addresses of all contracts on all networks:\n\n```bash\nnpm run networks\n```\n\nCommand line options for `truffle` can be passed down through NPM by preceding the options list with `--`. For example:\n\n### Clean network artifacts:\n\n```bash\nnpm run networks -- --clean\n```\n\nNetwork artifacts from running migrations will contain addresses of deployed contracts on the Kovan and Rinkeby testnets.\n\n### Take network info from `networks.json` and inject it into contract build artifacts. This is done prepublish as well.\n\n```bash\nnpm run injectnetinfo\n```\n\n### Extract all network information into `networks.json`.\n\nBe aware that this will clobber `networks.json`, so be careful with this command:\n\n```bash\nnpm run extractnetinfo\n```\n\nGas Measurements\n----------------\n\n### Log gas measurements into `build/gas-stats.json`\n\n```bash\nnpm run measuregasstats\n```\n\nDocumentation\n-------------\n\nThere is a copy version hosted online at https://gnosis.github.io/gnosis-contracts/\n\n### Build docs with doxity\n\n```bash\nscripts/makedocs.sh\n```\n\nSecurity and Liability\n----------------------\nAll contracts are WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nLicense\n-------\nAll smart contracts are released under GPL v.3.\n\nContributors\n------------\n- Stefan George ([Georgi87](https://github.com/Georgi87))\n- Martin Koeppelmann ([koeppelmann](https://github.com/koeppelmann))\n- Alan Lu ([cag](https://github.com/cag))\n- Roland Kofler ([rolandkofler](https://github.com/rolandkofler))\n- Collin Chin ([collinc97](https://github.com/collinc97))\n- Christopher Gewecke ([cgewecke](https://github.com/cgewecke))\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gnosis/gnosis-contracts.git"
  },
  "scripts": {
    "compile": "truffle compile",
    "coverage": "solidity-coverage",
    "extractnetinfo": "node scripts/extract_network_info.js",
    "injectnetinfo": "node scripts/inject_network_info.js",
    "lint": "eslint .",
    "measuregasstats": "node scripts/measure_gas_stats.js",
    "migrate": "truffle migrate",
    "networks": "truffle networks",
    "prepublish": "eslint . && node scripts/measure_gas_stats.js && truffle compile && truffle networks --clean && node scripts/inject_network_info.js",
    "resetnetinfo": "truffle networks --clean && node scripts/inject_network_info.js",
    "test": "run-with-testrpc -l 20000000 'truffle test --network testing'",
    "test-norpc": "truffle test --network testing"
  },
  "version": "0.3.5"
}
