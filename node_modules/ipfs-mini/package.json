{
  "_args": [
    [
      {
        "raw": "ipfs-mini@^1.1.2",
        "scope": null,
        "escapedName": "ipfs-mini",
        "name": "ipfs-mini",
        "rawSpec": "^1.1.2",
        "spec": ">=1.1.2 <2.0.0",
        "type": "range"
      },
      "/Users/ashley.nguyen27/gnosis-tasks/node_modules/@gnosis.pm/gnosisjs"
    ]
  ],
  "_from": "ipfs-mini@>=1.1.2 <2.0.0",
  "_id": "ipfs-mini@1.1.2",
  "_inCache": true,
  "_location": "/ipfs-mini",
  "_nodeVersion": "6.5.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ipfs-mini-1.1.2.tgz_1491489369321_0.1798093670513481"
  },
  "_npmUser": {
    "name": "silentcicero",
    "email": "thenickdodson@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ipfs-mini@^1.1.2",
    "scope": null,
    "escapedName": "ipfs-mini",
    "name": "ipfs-mini",
    "rawSpec": "^1.1.2",
    "spec": ">=1.1.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@gnosis.pm/gnosisjs"
  ],
  "_resolved": "https://registry.npmjs.org/ipfs-mini/-/ipfs-mini-1.1.2.tgz",
  "_shasum": "9c0fad3fa00a82c82caed1ae04b3b99ed3b3e95d",
  "_shrinkwrap": null,
  "_spec": "ipfs-mini@^1.1.2",
  "_where": "/Users/ashley.nguyen27/gnosis-tasks/node_modules/@gnosis.pm/gnosisjs",
  "authors": [
    "Nick Dodson <nick.dodson@consensys.net>"
  ],
  "babel": {
    "plugins": [
      [
        "transform-es2015-template-literals",
        {
          "loose": true
        }
      ],
      "transform-es2015-literals",
      "transform-es2015-function-name",
      "transform-es2015-arrow-functions",
      "transform-es2015-block-scoped-functions",
      [
        "transform-es2015-classes",
        {
          "loose": true
        }
      ],
      "transform-es2015-object-super",
      "transform-es2015-shorthand-properties",
      [
        "transform-es2015-computed-properties",
        {
          "loose": true
        }
      ],
      [
        "transform-es2015-for-of",
        {
          "loose": true
        }
      ],
      "transform-es2015-sticky-regex",
      "transform-es2015-unicode-regex",
      "check-es2015-constants",
      [
        "transform-es2015-spread",
        {
          "loose": true
        }
      ],
      "transform-es2015-parameters",
      [
        "transform-es2015-destructuring",
        {
          "loose": true
        }
      ],
      "transform-es2015-block-scoping",
      "transform-object-rest-spread",
      "transform-es3-member-expression-literals",
      "transform-es3-property-literals"
    ],
    "env": {
      "commonjs": {
        "plugins": [
          [
            "transform-es2015-modules-commonjs",
            {
              "loose": true
            }
          ]
        ]
      }
    }
  },
  "browser": {
    "xmlhttprequest": false,
    "./src/lib/XMLHttpRequest.js": "./src/lib/XMLHttpRequest-browser.js",
    "./lib/lib/XMLHttpRequest.js": "./lib/lib/XMLHttpRequest-browser.js"
  },
  "bugs": {
    "url": "https://github.com/silentcicero/ipfs-mini/issues"
  },
  "dependencies": {
    "xmlhttprequest": "^1.8.0"
  },
  "description": "A super tiny module for querying an IPFS node that works in nodejs and the browser.",
  "devDependencies": {
    "babel-cli": "6.18.0",
    "babel-core": "6.18.2",
    "babel-eslint": "7.1.0",
    "babel-loader": "6.2.8",
    "babel-plugin-check-es2015-constants": "6.8.0",
    "babel-plugin-transform-es2015-arrow-functions": "6.8.0",
    "babel-plugin-transform-es2015-block-scoped-functions": "6.8.0",
    "babel-plugin-transform-es2015-block-scoping": "6.18.0",
    "babel-plugin-transform-es2015-classes": "6.18.0",
    "babel-plugin-transform-es2015-computed-properties": "6.8.0",
    "babel-plugin-transform-es2015-destructuring": "6.19.0",
    "babel-plugin-transform-es2015-for-of": "6.18.0",
    "babel-plugin-transform-es2015-function-name": "6.9.0",
    "babel-plugin-transform-es2015-literals": "6.8.0",
    "babel-plugin-transform-es2015-modules-commonjs": "6.18.0",
    "babel-plugin-transform-es2015-object-super": "6.8.0",
    "babel-plugin-transform-es2015-parameters": "6.18.0",
    "babel-plugin-transform-es2015-shorthand-properties": "6.18.0",
    "babel-plugin-transform-es2015-spread": "6.8.0",
    "babel-plugin-transform-es2015-sticky-regex": "6.8.0",
    "babel-plugin-transform-es2015-template-literals": "6.8.0",
    "babel-plugin-transform-es2015-unicode-regex": "6.11.0",
    "babel-plugin-transform-es3-member-expression-literals": "6.5.0",
    "babel-plugin-transform-es3-property-literals": "6.5.0",
    "babel-plugin-transform-object-rest-spread": "6.19.0",
    "babel-register": "6.18.0",
    "chai": "3.5.0",
    "check-es3-syntax-cli": "0.1.3",
    "coveralls": "2.11.9",
    "cross-env": "1.0.7",
    "eslint": "2.10.1",
    "eslint-config-airbnb": "9.0.1",
    "eslint-import-resolver-webpack": "0.2.4",
    "eslint-plugin-import": "1.8.0",
    "eslint-plugin-jsx-a11y": "1.2.0",
    "eslint-plugin-react": "5.1.1",
    "eventsource-polyfill": "0.9.6",
    "istanbul": "0.4.5",
    "js-sha3": "0.5.5",
    "json-loader": "0.5.4",
    "karma": "^1.3.0",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-firefox-launcher": "^1.0.0",
    "karma-mocha": "^1.3.0",
    "lint-staged": "1.0.1",
    "mocha": "^3.1.2",
    "pre-commit": "1.1.3",
    "rimraf": "2.3.4",
    "web3": "0.17.0-beta",
    "webpack": "2.1.0-beta.15"
  },
  "directories": {},
  "dist": {
    "shasum": "9c0fad3fa00a82c82caed1ae04b3b99ed3b3e95d",
    "tarball": "https://registry.npmjs.org/ipfs-mini/-/ipfs-mini-1.1.2.tgz"
  },
  "engines": {
    "node": ">=6.5.0",
    "npm": ">=3"
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": "airbnb",
    "env": {
      "node": true,
      "mocha": true,
      "es6": true
    },
    "parserOptions": {
      "ecmaVersion": 6,
      "sourceType": "module"
    },
    "rules": {
      "import/no-unresolved": 2,
      "comma-dangle": [
        2,
        "always-multiline"
      ],
      "indent": [
        2,
        2,
        {
          "SwitchCase": 1
        }
      ],
      "no-console": 1,
      "max-len": 0,
      "prefer-template": 2,
      "no-use-before-define": 0,
      "newline-per-chained-call": 0,
      "arrow-body-style": [
        2,
        "as-needed"
      ]
    }
  },
  "files": [
    "dist",
    "internals",
    "examples",
    "lib",
    "src"
  ],
  "gitHead": "a9422b6283f2d523b6fdcf20e5f5a94b3257657b",
  "homepage": "https://github.com/silentcicero/ipfs-mini#readme",
  "keywords": [
    "ipfs",
    "api",
    "add",
    "cat",
    "provider",
    "node",
    "browser"
  ],
  "license": "MIT",
  "lint-staged": {
    "lint:eslint": "*.js"
  },
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "silentcicero",
      "email": "thenickdodson@gmail.com"
    }
  ],
  "name": "ipfs-mini",
  "optionalDependencies": {},
  "pre-commit": "build",
  "readme": "## ipfs-mini\n\n<div>\n  <!-- Dependency Status -->\n  <a href=\"https://david-dm.org/SilentCicero/ipfs-mini\">\n    <img src=\"https://david-dm.org/SilentCicero/ipfs-mini.svg\"\n    alt=\"Dependency Status\" />\n  </a>\n\n  <!-- devDependency Status -->\n  <a href=\"https://david-dm.org/SilentCicero/ipfs-mini#info=devDependencies\">\n    <img src=\"https://david-dm.org/SilentCicero/ipfs-mini/dev-status.svg\" alt=\"devDependency Status\" />\n  </a>\n\n  <!-- Build Status -->\n  <a href=\"https://travis-ci.org/SilentCicero/ipfs-mini\">\n    <img src=\"https://travis-ci.org/SilentCicero/ipfs-mini.svg\"\n    alt=\"Build Status\" />\n  </a>\n\n  <!-- NPM Version -->\n  <a href=\"https://www.npmjs.org/package/ipfs-mini\">\n    <img src=\"http://img.shields.io/npm/v/ipfs-mini.svg\"\n    alt=\"NPM version\" />\n  </a>\n\n  <!-- Test Coverage -->\n  <a href=\"https://coveralls.io/r/SilentCicero/ipfs-mini\">\n    <img src=\"https://coveralls.io/repos/github/SilentCicero/ipfs-mini/badge.svg\" alt=\"Test Coverage\" />\n  </a>\n\n  <!-- Javascript Style -->\n  <a href=\"http://airbnb.io/javascript/\">\n    <img src=\"https://img.shields.io/badge/code%20style-airbnb-brightgreen.svg\" alt=\"js-airbnb-style\" />\n  </a>\n</div>\n\n<br />\n\nA super tiny module for querying an IPFS node, that works in the browser and in nodejs. Only **2.76 kB** compressed!\n\nThis module was inspired by [`browser-ipfs`](https://github.com/pelle/browser-ipfs).\n\n## Install\n\n```\nnpm install --save ipfs-mini\n```\n\n## Usage\n\n```js\nconst IPFS = require('ipfs-mini');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nipfs.add('hello world!', (err, result) => {\n  console.log(err, result);\n});\n\n// result null 'QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j'\n\nipfs.cat('QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j', (err, result) => {\n  console.log(err, result);\n});\n\n// result null 'hello world!'\n\nipfs.addJSON({ somevalue: 2, name: 'Nick' }, (err, result) => {\n  console.log(err, result);\n});\n\n// result null 'QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j'\n\nipfs.catJSON('QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j', (err, result) => {\n  console.log(err, result);\n});\n\n// result null { somevalue: 2, name: 'Nick' }\n```\n\n## About\n\nA very simple module for querying an IPFS node. This module works for both `nodejs` and in the browser. It's extremly light, `<3 kB` when compressed.\n\nThis module uses the `js-ipfs-api` module for the adding operations on nodejs. However, in the browser, it uses a very light `FormData` `Blob` handling proceedure which was designed by Pelle Braendgaard, in his `browser-ipfs` module.\n\n## Examples\n\nAn example of the module in use for the browser, can be found in [./example](./examples).\n\nInside is a single, no configuration required, HTML file using the `ipfs-mini` module.\n\n## Browser Usage\n\n`ipfs-mini` is completely browserifiable and webpack ready. The main export found in our distributions [dist](./dist) folder is `IPFS`. There you will find two builds of `ipfs-mini`, one compressed and minified `ipfs-mini.min.js` and one uncompressed `ipfs-mini.js`.\n\n```\n<html>\n  <body>\n    <script type=\"text/javascript\" src=\"ipfs-mini.min.js\">\n    <script type=\"text/javascript\">\n      var ipfs = new IPFS({ provider: 'ipfs.infura.io', protocol: 'https' });\n\n      // ...\n    </script>\n  </body>\n</html>\n```\n\n## Webpack Figures\n\n**2.76 kB** compressed (not gzipped)\n\n```\nHash: 55d261679ea2edac14af                                                         \nVersion: webpack 2.1.0-beta.15\nTime: 612ms\n        Asset     Size  Chunks             Chunk Names\n    ipfs-mini.js  9.55 kB       0  [emitted]  main\nipfs-mini.js.map    11 kB       0  [emitted]  main\n    + 3 hidden modules\n\nHash: 20584eb8548f596cd97d                                                         \nVersion: webpack 2.1.0-beta.15\nTime: 737ms\n        Asset     Size  Chunks             Chunk Names\nipfs-mini.min.js  2.76 kB       0  [emitted]  main\n    + 3 hidden modules\n```\n\n## API Design\n\n### constructor\n\n[index.js:ipfs-mini](../../../blob/master/src/index.js \"Source code on GitHub\")\n\nIntakes a single provider object, outputs an `ipfs` instance.\n\n**Parameters**\n\n-   `provider` **Object** a single provider object, see `setProvider` for more details\n\nResult output `ipfs` **Object** instance.\n\n```js\nconst IPFS = require('ipfs-mini');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nipfs.cat('QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j', (err, result) => {\n  console.log(err, result);\n});\n```\n\n### setProvider\n\n[index.js:ipfs-mini](../../../blob/master/src/index.js \"Source code on GitHub\")\n\nSets the IPFS instance provider.\n\n**Parameters**\n\n-   `provider` **Object** a single provider object.\n\n    default: `{ host: 'localhost', port: 5001, protocol: 'http', base: '/api/v0' }`\n\nNo result output.\n\n```js\nconst IPFS = require('ipfs-mini');\nconst ipfs = new IPFS();\n\nipfs.setProvider({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nipfs.cat('QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j', cb);\n```\n\n### add\n\n[index.js:ipfs-mini](../../../blob/master/src/index.js \"Source code on GitHub\")\n\nQueries `/add` and adds a single String or Buffer data to IPFS, returns an IPFS hash.\n\n**Parameters**\n\n-   `input` **String|Buffer** the input data to be added to IPFS.\n\nResult output `ipfsHash` **String**.\n\n```js\nconst IPFS = require('ipfs-mini');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nipfs.add('hello world!', (err, result) => {\n  console.log(err, result);\n});\n\n// result null 'QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j'\n```\n\n### addJSON\n\n[index.js:ipfs-mini](../../../blob/master/src/index.js \"Source code on GitHub\")\n\nQueries `/add` and adds stringified JSON to IPFS, returns a single ipfs hash.\n\n**Parameters**\n\n-   `input` **Object** the input data to be added to IPFS.\n\nResult output `ipfsHash` **String**.\n\n```js\nconst IPFS = require('ipfs-mini');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nipfs.addJSON({ somevalue: 2, name: 'Nick' }, (err, result) => {\n  console.log(err, result);\n});\n\n// result null 'QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j'\n```\n\n### cat\n\n[index.js:ipfs-mini](../../../blob/master/src/index.js \"Source code on GitHub\")\n\nQueries a `/cat` request, returns data as a String.\n\n**Parameters**\n\n-   `ipfsHash` **String** the ipfs hash string.\n\nResult output `data` **String**.\n\n```js\nconst IPFS = require('ipfs-mini');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nipfs.cat('QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j', (err, result) => {\n  console.log(err, result);\n});\n\n// result null 'Hello world!'\n```\n\n### catJSON\n\n[index.js:ipfs-mini](../../../blob/master/src/index.js \"Source code on GitHub\")\n\nQueries a `/cat` request, returns data as a parsed JSON object.\n\n**Parameters**\n\n-   `ipfsHash` **String** the ipfs hash string.\n\nResult output `data` **Object**.\n\n```js\nconst IPFS = require('ipfs-mini');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nipfs.catJSON('QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j', (err, result) => {\n  console.log(err, result);\n});\n\n// result null { somevalue: 2, name: 'Nick' ...}\n```\n\n### stat\n\n[index.js:ipfs-mini](../../../blob/master/src/index.js \"Source code on GitHub\")\n\nQueries a `/object/stat` request, returns data stats object.\n\n**Parameters**\n\n-   `ipfsHash` **String** the ipfs hash string.\n\nResult output stats `data` **Object**.\n\n```js\nconst IPFS = require('ipfs-mini');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nipfs.stat('QmTp2hEo8eXRp6wg7jXv1BLCMh5a4F3B7buAUZNZUu772j', (err, result) => {\n  console.log(err, result);\n});\n\n/* result null {\n  BlockSize: 14595\n  CumulativeSize: 14595\n  DataSize: 14592\n  Hash: \"QmbhrsdhbvQy3RyNiDdStgF4YRVc4arteS3wL5ES5M6cVd\"\n  LinksSize: 3\n  NumLinks: 0\n}\n*/\n```\n\n## Contributing\n\nPlease help better the ecosystem by submitting issues and pull requests to default. We need all the help we can get to build the absolute best linting standards and utilities. We follow the AirBNB linting standard and the unix philosophy.\n\n## Help out\n\nThere is always a lot of work to do, and will have many rules to maintain. So please help out in any way that you can:\n\n- Create, enhance, and debug silentcicero rules (see our guide to [\"Working on rules\"](./github/CONTRIBUTING.md)).\n- Improve documentation.\n- Chime in on any open issue or pull request.\n- Open new issues about your ideas for making `ipfs-mini` better, and pull requests to show us how your idea works.\n- Add new tests to *absolutely anything*.\n- Create or contribute to ecosystem tools, like modules for encoding or contracts.\n- Spread the word.\n\nPlease consult our [Code of Conduct](CODE_OF_CONDUCT.md) docs before helping out.\n\nWe communicate via [issues](https://github.com/silentcicero/ipfs-mini/issues) and [pull requests](https://github.com/silentcicero/ipfs-mini/pulls).\n\n## Important documents\n\n- [Changelog](CHANGELOG.md)\n- [Code of Conduct](CODE_OF_CONDUCT.md)\n- [License](https://raw.githubusercontent.com/silentcicero/ipfs-mini/master/LICENSE)\n\n## Licence\n\nThis project is licensed under the MIT license, Copyright (c) 2016 Nick Dodson. For more information see LICENSE.md.\n\n```\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/silentcicero/ipfs-mini.git"
  },
  "scripts": {
    "build": "npm run build:commonjs && npm run test:lib && npm run build:umd && npm run build:umd:min",
    "build:clean": "npm run test:clean && rimraf ./dist",
    "build:commonjs": "cross-env BABEL_ENV=commonjs babel src --out-dir lib --copy-files",
    "build:umd": "cross-env BABEL_ENV=commonjs NODE_ENV=development webpack --config ./internals/webpack/webpack.config.js ./lib/index.js --progress",
    "build:umd:min": "cross-env BABEL_ENV=commonjs NODE_ENV=production webpack --config ./internals/webpack/webpack.config.js ./lib/index.js --progress",
    "coveralls": "npm run test-travis && cat ./coverage/lcov.info | coveralls",
    "lint": "npm run lint:js",
    "lint:eslint": "eslint --ignore-path .gitignore --ignore-pattern **/**.min.js",
    "lint:js": "npm run lint:eslint -- . ",
    "lint:staged": "lint-staged",
    "prebuild": "npm run build:clean && npm run test",
    "prepublish": "npm run build",
    "pretest": "npm run lint",
    "release": "npmpub",
    "start": "npm test",
    "test": "mocha ./src/tests/**/*.js -R spec --timeout 2000000",
    "test-travis": "node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha -- src/tests/**/*.js -R spec --timeout 2000000",
    "test:clean": "rimraf ./coverage",
    "test:karma": "cross-env NODE_ENV=test karma start internals/testing/karma.conf.js --single-run",
    "test:lib": "mocha ./lib/tests/**/*.js -R spec --timeout 2000000"
  },
  "version": "1.1.2",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "npm": ">=3",
        "node": ">=6.5.0"
      },
      "pkgid": "ipfs-mini@1.1.2"
    }
  ]
}
